stages:
  data_ingestion:
    cmd: python src/cnnClassifier/pipeline/data_ingestion.py
    deps:
      - src/cnnClassifier/pipeline/data_ingestion.py
      - config/secrect.yaml
      - config/config.yaml
    outs:
      - artifacts/data/normal
      - artifacts/data/tumor
  
  prepare_base_model:
    cmd: python src/cnnClassifier/pipeline/prepare_base_model.py
    deps:
      - src/cnnClassifier/pipeline/prepare_base_model.py
      - config/config.yaml
    params:
      - model_params.IMAGE_SIZE
      - model_params.INCLUDE_TOP
      - model_params.CLASSES
      - model_params.WEIGHTS
      - model_params.LEARNING_RATE
    outs:
      - artifacts/model/base_model.h5
      - artifacts/model/base_model_updated.h5
  
  model_training:
    cmd: python src/cnnClassifier/pipeline/model_training.py
    deps:
      - src/cnnClassifier/pipeline/model_training.py
      - config/config.yaml
      - params.yaml
      - artifacts/data/normal
      - artifacts/data/tumor
      - artifacts/model/base_model_updated.h5
    params:
      - model_params.IMAGE_SIZE
      - model_params.EPOCHS
      - model_params.BATCH_SIZE
      - model_params.AUGMENTATION
    outs:
      - artifacts/model/training_model.h5
  
  model_evaluation:
    cmd: python src/cnnClassifier/pipeline/model_evaluation.py
    deps:
      - src/cnnClassifier/pipeline/model_evaluation.py
      - config/config.yaml
      - artifacts/data/normal
      - artifacts/data/tumor
      - artifacts/model/training_model.h5
    params:
      - model_params.IMAGE_SIZE
      - model_params.BATCH_SIZE
    metrics:
      - artifacts/report/performace_report.json:
          cache: false
